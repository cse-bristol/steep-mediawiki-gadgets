* Steep Mediawiki Gadgets
Adds buttons to Mediawiki's Visual Editor to allow you to insert a [[https://github.com/cse-bristol/process-model][Process Model]] or [[https://github.com/cse-bristol/energy-efficiency-planner][Map]].

Part of the Stakeholder Engagement Platform for the [[http://www.smartsteep.eu/][Steep Project]].

[[https://github.com/cse-bristol/share-server][Code]] distributed under an open source MIT license.

See: [[https://doc.wikimedia.org/VisualEditor/master/][Visual Editor API]], [[http://www.mediawiki.org/wiki/Manual:Tag_extensions/Example][Tag Extensions Example]].

** Future Plans
*** Pointing to existing documents
From the Visual Editor, I'd like to change which document a process-model is pointing at, or remove it.

** Dependencies
 * Mediawiki v1.24.0.
 * [[http://www.mediawiki.org/wiki/Extension:VisualEditor][VisualEditor]] REL1_24 branch.
 * [[https://github.com/wikimedia/parsoid][Parsoid]] (with a running Parsoid server). Not that this does not require the Parsoid extension be installed into Mediawiki.
 * The Process Model and Map software hosted on the same domain as your wiki. Set up and run a [[https://github.com/cse-bristol/share-server][ShareJS Server]] to act as the backend for these.

The Steep Project also uses [[https://semantic-mediawiki.org/][Semantic Mediawiki]], but we do not actually require that for these components.

Verify your Mediawiki plugins by looking at the Special:Version page of your wiki.

** Deployment
Run the following from inside your Mediawiki directory:
#+BEGIN_SRC
# Checkout the code into the extensions folder.
git clone git@github.com:cse-bristol/steep-mediawiki-gadgets.git extensions/steep-mediawiki-gadgets

# Modify LocalSettings.PHP
echo 'require_once "$IP/extensions/steep-mediawiki-gadgets/steep-mediawiki-gadgets.php";' >> LocalSettings.php
#+END_SRC

** Steep Platform Scripts
Some useful scripts for the Steep platform on our server.
 + there's still an Nginx problem with args? Use rewrite instead of proxy.

*** Database Backup
Look up the database password from LocalSettings.php. Fill in and run the following script:

#+BEGIN_SRC sh
PASS=;
mkdir -p ~/backup;
mysqldump --user=mediawiki --password=$PASS mediawiki > ~/backup/mediawiki.sql;
#+END_SRC

*** Packages
There are the packages we need on a Debian (Jessie) system:
#+BEGIN_SRC sh
sudo aptitude install git subversion php5-common php5-cli php5-fpm nginx mysql-server mysql-client mongodb-server mongodb-clients
#+END_SRC

*** Parsoid Install
Clone parsoid:
#+BEGIN_SRC sh
git clone git@github.com:wikimedia/parsoid.git /opt/parsoid
#+END_SRC

Tom made the following systemd ini file in /etc/systemd/system/parsoid.service: 
#+BEGIN_SRC
[Unit]
Description=Mediawiki Parsoid web service on node.js
Documentation=http://www.mediawiki.org/wiki/Parsoid
Wants=local-fs.target network.target
After=local-fs.target network.target
 
[Install]
WantedBy=multi-user.target
 
[Service]
Type=simple
User=nobody
Group=nogroup
WorkingDirectory=/opt/parsoid
ExecStart=/usr/bin/nodejs /opt/parsoid/api/server.js
KillMode=process
Restart=on-success
PrivateTmp=true
StandardOutput=syslog
#+END_SRC

*** Nginx Config
You need the following locations included in your nginx.conf (preferably using Debian's site-available/sites-enabled mechanism):

#+BEGIN_SRC nginx
    # Sometimes the wiki looks for pages with the abbreviation /w.
    location /w {
      	proxy_pass http://localhost/wiki;
    }
    
    location /wiki {
	proxy_pass http://localhost/mediawiki;
    }

    location /mediawiki {
        index index.php?title=Main_Page;

        # Pass requests ending in .php through to php-fpm.
	location ~ \.php$ {
	    include fastcgi_params;
	    fastcgi_pass unix:/var/run/php5-fpm.sock;
	    fastcgi_param SCRIPT_FILENAME $request_filename;
	    fastcgi_param QUERY_STRING $query_string;
            fastcgi_param REQUEST_METHOD $request_method;
            fastcgi_param CONTENT_TYPE $content_type;
            fastcgi_param CONTENT_LENGTH $content_length;
	}

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            try_files $uri /index.php;
            expires max;
            log_not_found off;
        }

        # Assume that requests which didn't point to any of the above were page titles.
	location /mediawiki/ {
	    proxy_pass http://localhost/mediawiki/index.php?title=;
	}
    }
#+END_SRC

Remember to run:
#+BEGIN_SRC sh
sudo systemctl restart nginx
#+END_SRC

*** Mediawiki
The following script builds a new Mediawiki install in parallel to any existing one. It then updates the database and Parsoid server, then finally swaps a symlink over. Downtime should be quite short.

If you're doing a fresh install, you'll need to set up LocalSettings.php (see below).

#+BEGIN_SRC sh
# Visit http://tools.smartsteep.eu/wiki/Special:Version to see a list of currently installed extensions. Look at LocalSettings.php to see what directories we expect them in.

REL="REL1_24";
SEMANTIC_REL="2.0";
MAIN_DIR="/var/www/mediawiki";
NEW_DIR="${MAIN_DIR}_${REL}";

# Clone Mediawiki and copy settings.
git clone git@github.com:wikimedia/mediawiki.git $NEW_DIR --branch $REL;
cp "$MAIN_DIR/LocalSettings.php" $NEW_DIR;

# Install Extensions

for EXTENSION in "Cite" "Gadgets" "Interwiki" "WikiEditor" "ConfirmAccount" "VisualEditor" "LiquidThreads" "GraphViz" "MwEmbedSuport" "TimedMediaHandler" "HeaderTabs" ; do
git clone "git@github.com:wikimedia/mediawiki-extensions-${EXTENSION}.git" "${EXT_DIR}/${EXTENSION}" --branch $REL;
done;

# Visual Editor Core
cd "${EXT_DIR}/VisualEditor";
git submodule update --init;

# Semantic Mediawiki V2
cd $NEW_DIR;
wget http://getcomposer.org/composer.phar;
php composer.phar require "mediawiki/semantic-media-wiki:${SEMANTIC_REL}";

# Steep Extensions
git clone git@github.com:cse-bristol/steep-mediawiki-gadgets.git "${EXT_DIR}/steep-mediawiki-gadgets";

# Vector Skin
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/Vector "${NEW_DIR}/skins/Vector" --branch $REL;

# Update Parsoid
cd /opt/parsoid;
git pull;
# git checkout $REL; (not finished yet for 1.24, so I didn't do this step).
npm install;
systemctl restart parsoid;

# Database setup/upgrade
php "${NEW_DIR}/maintenance/update.php";

# Refresh Semantic Data
php "${EXT_DIR}/SemanticMediaWiki/maintenance/rebuildData.php";

# Point the web server to the new install.
ln -s ${NEW_DIR} ${MAIN_DIR} --no-target-directory --force;
#+END_SRC

**** LocalSettings.php
Copy the contents of this into a file called LocalSettings.php in the root of your Mediawiki install. Fill in the $wgDBpassword variable with the password for your MySQL database.

#+BEGIN_SRC php
<?php
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "SteepWiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";
$wgScriptExtension = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://tools.smartsteep.eu";

## The relative URL path to the skins directory
$wgStylePath = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "/extensions/steep-mediawiki-gadgets/small_steep1.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "wiki@smartsteep.eu";
$wgPasswordSender = "wiki@smartsteep.eu";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "mediawiki";
$wgDBuser = "mediawiki";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en-gb";

$wgSecretKey = "eff959e37fef5819e4659877acb38513bb8e7f6e3eaf06d3ab39b507c496c154";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "dbbd083d163510c2";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";
require_once "$IP/skins/Vector/Vector.php";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

# Enabled Extensions. Most extensions are enabled by including the base extension file here
# but check specific extension documentation for more details
# The following extensions were automatically enabled:
require_once "$IP/extensions/Cite/Cite.php";
require_once "$IP/extensions/Gadgets/Gadgets.php";
require_once "$IP/extensions/Interwiki/Interwiki.php";
require_once "$IP/extensions/WikiEditor/WikiEditor.php";
require_once "$IP/extensions/ConfirmAccount/ConfirmAccount.php";
require_once "$IP/extensions/VisualEditor/VisualEditor.php";
require_once "$IP/extensions/LiquidThreads/LiquidThreads.php";

include_once "$IP/extensions/GraphViz/GraphViz.php";
# End of automatically generated settings.
# Add more configuration options below.

## Stuff to configure the URL rewriting stuff
$wgScriptExtension  = ".php";
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;

enableSemantics( 'smartsteep.eu' );

# request accounts doesn't require a bio

$wgAccountRequestMinWords = 0;

# wire up parsoid to this wiki
$wgVisualEditorParsoidURL = 'http://localhost:8000';
$wgVisualEditorParsoidForwardCookies = true;
$wgDefaultUserOptions['visualeditor-enable'] = 1;

$smwgShowFactbox=SMW_FACTBOX_NONEMPTY;

# enable process graph output
$srfgFormats[] = 'process';

# Enables use of WikiEditor by default but still allow users to disable it in preferences
$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
 
# Displays the Preview and Changes tabs
$wgDefaultUserOptions['wikieditor-preview'] = 1;
 
# Displays the Publish and Cancel buttons on the top right side
$wgDefaultUserOptions['wikieditor-publish'] = 1;

$wgAllowUserJs=true;

$wgFileExtensions = array('png', 'gif', 'jpg', 'jpeg', 'doc', 'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx', 'pptx', 'ps', 'psd', 'swf', 'fla', 'mp3', 'mp4', 'm4v', 'mov', 'avi');

$wgUploadSizeWarning = 2147483648;
$wgMaxUploadSize = 2147483648;

require( "$IP/extensions/MwEmbedSupport/MwEmbedSupport.php" );
require( "$IP/extensions/TimedMediaHandler/TimedMediaHandler.php" );
require_once "$IP/extensions/HeaderTabs/HeaderTabs.php";

require_once('extensions/steep-mediawiki-gadgets/steep-mediawiki-gadgets.php');
#+END_SRC
