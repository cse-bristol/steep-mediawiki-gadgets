* Steep Mediawiki Gadgets
Adds buttons to Mediawiki's Visual Editor to allow you to insert a [[https://github.com/cse-bristol/process-model][Process Model]] or [[https://github.com/cse-bristol/energy-efficiency-planner][Map]].

Part of the Stakeholder Engagement Platform for the [[http://www.smartsteep.eu/][Steep Project]].

[[https://github.com/cse-bristol/share-server][Code]] distributed under an open source MIT license.

See: [[https://doc.wikimedia.org/VisualEditor/master/][Visual Editor API]], [[http://www.mediawiki.org/wiki/Manual:Tag_extensions/Example][Tag Extensions Example]].

** Future Plans
*** Pointing to existing documents
From the Visual Editor, I'd like to change which document a process-model is pointing at, or remove it.

** Dependencies
 * Mediawiki v1.24.0.
 * [[http://www.mediawiki.org/wiki/Extension:VisualEditor][VisualEditor]] REL1_24 branch.
 * [[https://github.com/wikimedia/parsoid][Parsoid]] (with a running Parsoid server). Not that this does not require the Parsoid extension be installed into Mediawiki.
 * The Process Model and Map software hosted on the same domain as your wiki. Set up and run a [[https://github.com/cse-bristol/share-server][ShareJS Server]] to act as the backend for these.

The Steep Project also uses [[https://semantic-mediawiki.org/][Semantic Mediawiki]], but we do not actually require that for these components.

Verify your Mediawiki plugins by looking at the Special:Version page of your wiki.

** Deployment
Run the following from inside your Mediawiki directory:
#+BEGIN_SRC
# Checkout the code into the extensions folder.
git clone git@github.com:cse-bristol/steep-mediawiki-gadgets.git extensions/steep-mediawiki-gadgets

# Modify LocalSettings.PHP
echo 'require_once "$IP/extensions/steep-mediawiki-gadgets/steep-mediawiki-gadgets.php";' >> LocalSettings.php
#+END_SRC

** Steep Platform Scripts
Some useful scripts for administering the whole Steep platform on our server.

*** Database Backup
Look up the database password from LocalSettings.php. Fill in and run the following script:

#+BEGIN_SRC sh
PASS=;
mkdir -p ~/backup;
mysqldump --user=mediawiki --password=$PASS mediawiki > ~/backup/mediawiki.sql;
#+END_SRC

*** Packages
There are the packages we need on a Debian (Jessie) system:
#+BEGIN_SRC sh
sudo aptitude install git subversion php5-common php5-cli php5-fpm nginx mysql-server mysql-client mongodb-server mongodb-clients
#+END_SRC

*** Parsoid Install
Clone parsoid:
#+BEGIN_SRC sh
git clone git@github.com:wikimedia/parsoid.git /opt/parsoid
#+END_SRC

Tom made the following systemd ini file in /etc/systemd/system/parsoid.service: 
#+BEGIN_SRC
[Unit]
Description=Mediawiki Parsoid web service on node.js
Documentation=http://www.mediawiki.org/wiki/Parsoid
Wants=local-fs.target network.target
After=local-fs.target network.target
 
[Install]
WantedBy=multi-user.target
 
[Service]
Type=simple
User=nobody
Group=nogroup
WorkingDirectory=/opt/parsoid
ExecStart=/usr/bin/nodejs /opt/parsoid/api/server.js
KillMode=process
Restart=on-success
PrivateTmp=true
StandardOutput=syslog
#+END_SRC

*** Nginx Config
You need the following locations included in your nginx.conf (preferably using Debian's site-available/sites-enabled mechanism):

#+BEGIN_SRC nginx
      # Sometimes the wiki looks for pages with the abbreviation /w.
      location /w {
          rewrite ^/w(.*)$ /mediawiki$1;
      }
      
      location /wiki {
          rewrite ^/wiki(.*)$ /mediawiki$1;
      }

      location @wikiindex {
          rewrite ^/mediawiki(.*)$ /mediawiki/index.php?title=$1&$args;
      }

      location /mediawiki {
          try_files $uri $uri/ @wikiindex;

          # Pass requests ending in .php through to php-fpm.
          location ~* \.php$ {
              include fastcgi_params;
              fastcgi_pass unix:/var/run/php5-fpm.sock;
              fastcgi_param SCRIPT_FILENAME $request_filename;
              fastcgi_param QUERY_STRING $query_string;
              fastcgi_param REQUEST_METHOD $request_method;
              fastcgi_param CONTENT_TYPE $content_type;
              fastcgi_param CONTENT_LENGTH $content_length;
          }

          location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
              expires max;
              log_not_found off;
          }
      }

    # The place where the map lives.
    location /energy-efficiency-planner {
    }

    location /process-model {
    }

    # ShareJS server used by the planner and the process model. This is running on NodeJS.
    location /channel {
       	client_max_body_size 100M;
        proxy_pass http://localhost:11000;
    }
#+END_SRC

Remember to run:
#+BEGIN_SRC sh
sudo systemctl restart nginx
#+END_SRC

*** Mediawiki
The following script builds a new Mediawiki install in parallel to any existing one. It then updates the database and Parsoid server, then finally swaps a symlink over. Downtime should be quite short.

If you're doing a fresh install, you'll need to set up LocalSettings.php (see below).

#+BEGIN_SRC sh
# Visit http://tools.smartsteep.eu/wiki/Special:Version to see a list of currently installed extensions. Look at LocalSettings.php to see what directories we expect them in.

REL="REL1_24";
SEMANTIC_REL="2.0";
MAIN_DIR="/var/www/mediawiki";
NEW_DIR="${MAIN_DIR}_${REL}";
EXT_DIR="${NEW_DIR}/extensions";

# Clone Mediawiki and copy settings.
git clone git@github.com:wikimedia/mediawiki.git $NEW_DIR --branch $REL;
cp "$MAIN_DIR/LocalSettings.php" $NEW_DIR;

# Install Extensions
for EXTENSION in "Cite" "Gadgets" "Interwiki" "WikiEditor" "ConfirmAccount" "VisualEditor" "LiquidThreads" "GraphViz" "MwEmbedSuport" "TimedMediaHandler" "HeaderTabs" "SemanticForms" "SemanticFormsInputs" "SemanticDrilldown"; do
git clone "git@github.com:wikimedia/mediawiki-extensions-${EXTENSION}.git" "${EXT_DIR}/${EXTENSION}" --branch $REL;
done;

# Visual Editor Core
cd "${EXT_DIR}/VisualEditor";
git submodule update --init;

# Semantic Mediawiki V2
cd $NEW_DIR;
wget http://getcomposer.org/composer.phar;
php composer.phar require "mediawiki/semantic-media-wiki:${SEMANTIC_REL}";

# Steep Extensions
git clone git@github.com:cse-bristol/steep-mediawiki-gadgets.git "${EXT_DIR}/steep-mediawiki-gadgets";

# Vector Skin
git clone https://gerrit.wikimedia.org/r/mediawiki/skins/Vector "${NEW_DIR}/skins/Vector" --branch $REL;

# Update Parsoid
cd /opt/parsoid;
git pull;
# git checkout $REL; (not finished yet for 1.24, so I didn't do this step).
npm install;
systemctl restart parsoid;

# Database setup/upgrade
php "${NEW_DIR}/maintenance/update.php";

# Refresh Semantic Data
php "${EXT_DIR}/SemanticMediaWiki/maintenance/rebuildData.php";

# Point the web server to the new install.
ln -s ${NEW_DIR} ${MAIN_DIR} --no-target-directory --force;
#+END_SRC

**** LocalSettings.php
Copy the contents of LocalSettings.php.default into a file called LocalSettings.php in the root of your Mediawiki install. Fill in the $wgDBpassword variable with the password for your MySQL database.
